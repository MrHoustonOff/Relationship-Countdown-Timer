/**
 * @fileoverview v2.0 - –†–µ–∞–∫—Ç–∏–≤–Ω–æ–µ —è–¥—Ä–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Alpine.js.
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º (config, log, lang, ui),
 * –≤—ã–ø–æ–ª–Ω—è–µ—Ç API-–∑–∞–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å UI.
 */

document.addEventListener('alpine:init', () => {
    console.log("--- [DEBUG] Alpine.js: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞...");

    Alpine.store('app', {

        // --- 1. –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –°–æ—Å—Ç–æ—è–Ω–∏–µ (STATE) ---
        config: null,        // –ó–∞–≥—Ä—É–∑–∏—Ç—Å—è –∏–∑ /api/config
        log: null,           // –ó–∞–≥—Ä—É–∑–∏—Ç—Å—è –∏–∑ /api/calendar_log
        lang: {},            // –ó–∞–≥—Ä—É–∑–∏—Ç—Å—è –∏–∑ /static/lang/*.json
        ui: {
            currentPage: 'page-main', // 'page-main', 'page-calendar', 'page-settings'
            isLoaded: false,          // –§–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            isDirty: false,           // –ï—Å—Ç—å –ª–∏ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
            error: null,              // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        },

        // --- 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (INIT) ---
        /**
         * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –û–î–ò–ù –†–ê–ó –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ <body>.
         * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –±—ç–∫–µ–Ω–¥–∞.
         */
        async init() {
            console.log("--- [DEBUG] Store.init(): –°—Ç–∞—Ä—Ç...");
            try {
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
                const [configRes, logRes] = await Promise.all([
                    fetch('/api/config'),
                    fetch('/api/calendar_log')
                ]);

                if (!configRes.ok) throw new Error(`–û—à–∏–±–∫–∞ API /api/config: ${configRes.status}`);
                if (!logRes.ok) throw new Error(`–û—à–∏–±–∫–∞ API /api/calendar_log: ${logRes.status}`);

                this.config = await configRes.json();
                this.log = await logRes.json();

                // –ü—Ä–æ–≤–µ—Ä–∫–∞
                if (!this.config || !this.log || !this.config.language) {
                    throw new Error("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ config –∏–ª–∏ log –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.");
                }

                // –ó–∞–≥—Ä—É–∂–∞–µ–º —è–∑—ã–∫ (–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Ç.–∫. –Ω—É–∂–µ–Ω config.language)
                const langRes = await fetch(`/static/lang/${this.config.language}.json`);
                if (!langRes.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —è–∑—ã–∫–∞: ${this.config.language}.json`);
                this.lang = await langRes.json();

                // –ü—Ä–∏–º–µ–Ω—è–µ–º CSS-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
                this.applyDynamicStyles();

                console.log("--- [DEBUG] Store.init(): –£–°–ü–ï–•. Config, Log, Lang –∑–∞–≥—Ä—É–∂–µ–Ω—ã.");
                this.ui.isLoaded = true; // <--- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –ø–æ–∫–∞–∑—É!

                // TODO: –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (–ø–æ–∫–∞–∂–µ–º –º–æ–¥–∞–ª–∫—É, –µ—Å–ª–∏ is_first_launch)
                if (this.config.is_first_launch) {
                     console.log("--- [DEBUG] –ü–ï–†–í–´–ô –ó–ê–ü–£–°–ö. (–õ–æ–≥–∏–∫–∞ –º–æ–¥–∞–ª–∫–∏ –±—É–¥–µ—Ç –∑–¥–µ—Å—å)");
                     // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∏–º –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                     this.ui.currentPage = 'page-settings';
                }

            } catch (error) {
                console.error("--- [DEBUG] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ Store.init():", error);
                this.ui.error = error.message;
            }
        },

        // --- 3. –ú–µ—Ç–æ–¥—ã (ACTIONS) ---

        /**
         * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É, –ø—Ä–æ–≤–µ—Ä—è—è '–≥—Ä—è–∑–Ω—É—é' —Ñ–æ—Ä–º—É.
         * @param {string} pageId - 'page-main', 'page-calendar', 'page-settings'
         */
        async navigateTo(pageId) {
            if (this.ui.currentPage === pageId) return; // –£–∂–µ –∑–¥–µ—Å—å

            if (this.ui.isDirty) {
                // TODO: –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ (–ø–æ–∫–∞ alert)
                console.warn("--- [DEBUG] –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ù–ï–°–û–•–†–ê–ù–ï–ù–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø!");
                const choice = confirm(this.lang['modal_unsaved_title'] + "\n" + this.lang['modal_unsaved_text']); // –í—Ä–µ–º–µ–Ω–Ω—ã–π alert

                if (!choice) {
                     return; // '–û—Ç–º–µ–Ω–∞' - –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                }
                // 'OK' - (–ø–æ–∫–∞ —á—Ç–æ 'Discard')
                this.ui.isDirty = false;
                // TODO: –í—ã–∑–≤–∞—Ç—å revertSettings()
            }

            this.ui.currentPage = pageId;

            // –°–±—Ä–æ—Å –∑—É–º–∞, –µ—Å–ª–∏ —É—Ö–æ–¥–∏–º —Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è (–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞)
             if (pageId !== 'page-calendar' && this.config && !this.config.calendar_save_zoom && typeof resetCalendarZoom === 'function') {
                resetCalendarZoom();
            }
        },

        /**
         * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏ (—Ü–≤–µ—Ç–∞) –∏–∑ this.config –≤ :root
         */
        applyDynamicStyles() {
            if (!this.config || !this.config.colors) return;
            console.log("--- [DEBUG] Store: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ CSS-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö...");
            const root = document.documentElement;
            // 1. –¶–≤–µ—Ç–∞ UI
            Object.keys(this.config.colors).forEach(key => {
                const cssVar = `--${key.replace(/_/g, '-')}`;
                root.style.setProperty(cssVar, this.config.colors[key]);
            });
            // 2. –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            root.style.setProperty('--calendar-empty-cell-color', this.config.calendar_empty_cell_color);
            root.style.setProperty('--calendar-marked-day-color', this.config.calendar_marked_day_color);
            root.style.setProperty('--sticker-color', this.config.sticker_color);
            root.style.setProperty('--sticker-scale-factor', this.config.sticker_scale);
        },

        /**
         * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –æ—Ç–º–µ—Ç–∫—É –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ (API + –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ state).
         * @param {string} dateString - "YYYY-MM-DD"
         * @param {HTMLElement} cell - –≠–ª–µ–º–µ–Ω—Ç .day-cell
         */
        async toggleDate(dateString, cell) {
            if (!dateString || !cell) return;
            console.log(`--- [DEBUG] Store.toggleDate: ${dateString}`);

            // –ë–ª–æ–∫–∏—Ä—É–µ–º —è—á–µ–π–∫—É –Ω–∞ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞
            cell.style.pointerEvents = 'none';
            cell.style.opacity = '0.5';

            try {
                const response = await fetch('/api/calendar/toggle', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ date: dateString })
                });

                if (!response.ok) throw new Error(`API /calendar/toggle Error: ${response.status}`);

                const result = await response.json();
                console.log("--- [DEBUG] –û—Ç–≤–µ—Ç API:", result);

                // --- –†–ï–ê–ö–¢–ò–í–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï ---
                // Alpine.js –æ—Ç—Å–ª–µ–¥–∏—Ç —ç—Ç—É –º—É—Ç–∞—Ü–∏—é –∏ *—Å–∞–º* –ø–µ—Ä–µ—Ä–∏—Å—É–µ—Ç UI
                if (result.status === 'added' && result.entry) {
                    this.log.marked_dates[dateString] = result.entry;
                } else if (result.status === 'removed') {
                    delete this.log.marked_dates[dateString];
                }

                // –≠—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
                if (this.config.effects_enabled && result.status === 'added') {
                    spawnParticles({
                         originElement: cell,
                         symbol: APP_CONFIG.effect_particle_day || 'üíñ',
                         count: 1, spread: 360, distance: 400, duration: 1200
                    });
                }

            } catch (error) {
                console.error("--- [DEBUG] –û—à–∏–±–∫–∞ –≤ toggleDate:", error);
                // TODO: –ü–æ–∫–∞–∑–∞—Ç—å —é–∑–µ—Ä—É —Ç–æ—Å—Ç "–û—à–∏–±–∫–∞!"
            } finally {
                // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —è—á–µ–π–∫—É
                cell.style.pointerEvents = 'auto';
                cell.style.opacity = '1';
            }
        }

        // --- –°—é–¥–∞ –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º saveSettings(), revertSettings() –∏ —Ç.–¥. ---
    });
});